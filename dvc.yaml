stages:
  data_ingestion:
    cmd: python src/fightClassifier/pipeline/data_ingestion_pipeline.py
    deps:
      - src/fightClassifier/pipeline/data_ingestion_pipeline.py
      - config/config.yaml
    outs:
      - artifacts/kaggle_dataset

  data_preprocessing:
    cmd: python src/fightClassifier/pipeline/data_preprocessing.py
    deps:
      - src/fightClassifier/pipeline/data_preprocessing.py
      - config/config.yaml
      - artifacts/kaggle_dataset
    outs:
      - artifacts/preprocessed_data

  data_loader:
    cmd: python src/fightClassifier/pipeline/data_loader_pipeline.py
    deps:
      - src/fightClassifier/pipeline/data_loader_pipeline.py
      - config/config.yaml
      - artifacts/preprocessed_data
    outs:
      - artifacts/loader

  model_training:
    cmd: python src/fightClassifier/pipeline/model_training_pipeline.py
    deps:
      - src/fightClassifier/pipeline/model_training_pipeline.py
      - config/config.yaml
      - artifacts/loader
    outs:
      - artifacts/models
    params:
      - optimizer
      - data
      - training

  evaluate:
    cmd: python src/fightClassifier/pipeline/evaluate_pipeline.py
    deps:
      - src/fightClassifier/pipeline/model_training_pipeline.py
      - src/fightClassifier/pipeline/evaluate_pipeline.py
      - config/config.yaml
      - artifacts/models
    params:
      - optimizer
      - data
      - training

  mlflow_setup:
    cmd: python src/fightClassifier/pipeline/daghub_mlflow_pipeline.py
    deps:
      - src/fightClassifier/pipeline/daghub_mlflow_pipeline.py
      - config/config.yaml
      - artifacts/models
    params:
      - optimizer
      - data
      - training
